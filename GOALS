Currently: I have achieved initial goal of being able to move sprite around
on screen with keyboard arrows.

Goal: Refactor code so that you can create a 'player' object that can have
injected to it a 'controller'/keyboard that handles input control..basic.js
should be small.

    Steps:
        - Investigate grant's code and understand the Immediately Invoked
            function thing for the player object
        - Create that for 'player' object
        - Be able to spawn 'player' in middle of screen with bunny sprite
        - create IIF for 'keyboard'
        - input keyboard into player

========
Questions
========
- What is the data I need to represent for this game..what kind of data are we 
    dealing with?
    - Game Score
    - Position of players
    - vx & vy of players
    - position of ball
    - vx + vy of ball


- what should happen when the player presses + releases the 'rope' button?
    - on release => rope should be drawn/removed
- who 'owns' the rope graphic? keyboard or player?
 player owns the rope..

Rope Physics
- currently it does lose energy slowly without any input..player moves back and forth not as far.

Player Movement physics plan
- currently the Player class has a direct reference to the position of the underlying Pixi sprite. On each game loop, the position of the sprite is changed by the current velocity of the sprite as determined by underlying PlayerInputController object (see the update() function in Player). We should keep that same interaction and have the handlers in the PlayerInputController class expose the correct velocity depending on if the Player is attached to the rope or not.
- Consider renaming PlayerInputController class. As it really is like a VelocityCalculator or something that handles the key inputs for a player.
